// bitmap.js

module.exports = {
    getBitmap: function(c) {
        switch (c) {
            case "0":
                return [
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 0, 1],
                    [1, 0, 1],
                    [1, 1, 1]
                ];
                break;
            case "1":
                return [
                    [1, 1],
                    [0, 1],
                    [0, 1],
                    [0, 1],
                    [0, 1]
                ];
                break;
            case "2":
                return [
                    [1, 1, 1],
                    [0, 0, 1],
                    [1, 1, 1],
                    [1, 0, 0],
                    [1, 1, 1],
                ];
                break;
            case "3":
                return [
                    [1, 1, 1],
                    [0, 0, 1],
                    [1, 1, 1],
                    [0, 0, 1],
                    [1, 1, 1],
                ];
                break;
            case "4":
                return [
                    [1, 0, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                    [0, 0, 1],
                    [0, 0, 1]
                ];
                break;
            case "5":
                return [
                    [1, 1, 1],
                    [1, 0, 0],
                    [1, 1, 1],
                    [0, 0, 1],
                    [1, 1, 1],
                ];
                break;
            case "6":
                return [
                    [1, 1, 1],
                    [1, 0, 0],
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                ];
                break;
            case "7":
                return [
                    [1, 1, 1],
                    [1, 0, 1],
                    [0, 0, 1],
                    [0, 0, 1],
                    [0, 0, 1],
                ];
                break;
            case "8":
                return [
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                ];
                break;
            case "9":
                return [
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                    [0, 0, 1],
                    [1, 1, 1],
                ];
                break;
            case "+":
                return [
                    [0, 0, 0],
                    [0, 1, 0],
                    [1, 1, 1],
                    [0, 1, 0]
                ];
                break;
            case "=":
                return [
                    [0, 0],
                    [1, 1],
                    [0, 0],
                    [1, 1]
                ];
                break;
            case "*":
                return [
                    [0, 0, 0],
                    [1, 0, 1],
                    [0, 1, 0],
                    [1, 0, 1]
                ];
                break;
            case "?":
                return [
                    [1, 1, 1],
                    [1, 0, 1],
                    [0, 1, 0],
                    [0, 0, 0],
                    [0, 1, 0],
                ];
                break;
            case "m":
                return [
                    [0, 0, 0, 0, 0],
                    [0, 1, 0, 1, 0],
                    [1, 0, 1, 0, 1],
                    [1, 0, 1, 0, 1],
                    [1, 0, 1, 0, 1],
                ];
                break;
            case "a":
                return [
                    [1, 1, 0],
                    [0, 0, 1],
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                ];
                break;
            case "k":
                return [
                    [1, 0, 0],
                    [1, 0, 0],
                    [1, 0, 1],
                    [1, 1, 0],
                    [1, 0, 1],
                ];
                break;
            case "e":
                return [
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                    [1, 0, 0],
                    [1, 1, 1],
                ];
                break;

            case "U":
                return [
                    [1, 0, 0, 1],
                    [1, 0, 0, 1],
                    [1, 0, 0, 1],
                    [1, 0, 0, 1],
                    [0, 1, 1, 0],
                ];
                break;
            case "I":
                return [
                    [1, 1, 1],
                    [0, 1, 0],
                    [0, 1, 0],
                    [0, 1, 0],
                    [1, 1, 1],
                ];
                break;
            case "S":
                return [
                    [1, 1, 1],
                    [1, 0, 0],
                    [1, 1, 1],
                    [0, 0, 1],
                    [1, 1, 1],
                ];
                break;
            case "T":
                return [
                    [1, 1, 1],
                    [0, 1, 0],
                    [0, 1, 0],
                    [0, 1, 0],
                    [0, 1, 0],
                ];
                break;
            case "D":
                return [
                    [1, 1, 0],
                    [1, 0, 1],
                    [1, 0, 1],
                    [1, 0, 1],
                    [1, 1, 0],
                ];
                break;
            case "O":
                return [
                    [0, 1, 0],
                    [1, 0, 1],
                    [1, 0, 1],
                    [1, 0, 1],
                    [0, 1, 0],
                ];
                break;

            case "A":
                return [
                    [0, 1, 0],
                    [1, 0, 1],
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 0, 1],
                ];
                break;
            case "L":
                return [
                    [1, 0, 0],
                    [1, 0, 0],
                    [1, 0, 0],
                    [1, 0, 0],
                    [1, 1, 1],
                ];
                break;
            case "H":
                return [
                    [1, 0, 1],
                    [1, 0, 1],
                    [1, 1, 1],
                    [1, 0, 1],
                    [1, 0, 1],
                ];
                break;


            case "\\":
                return [
                    [1, 0, 1],
                    [0, 1, 0],
                    [0, 1, 0],
                    [1, 1, 1],
                    [0, 1, 0],
                ];
                break;
            case ":":
                return [
                    [0, 0, 0],
                    [0, 1, 0],
                    [0, 0, 0],
                    [0, 1, 0],
                ];
                break;
            case ".":
                return [
                    [0],
                    [0],
                    [0],
                    [1],
                ];
            case "!":
                return [
                    [1],
                    [1],
                    [1],
                    [0],
                    [1],
                ];
                break;

        }
    }
}